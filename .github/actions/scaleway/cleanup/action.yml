---
name: Clean up scaleway instances
description: Cleans up scaleway instances that might have been left behind.

inputs:
  tag:
    description: Tag used to select the instances to clean up
    default: 'github'
    required: false

outputs:
  id:
    description: ID of the created instance.
    value: ${{ steps.create_instance.outputs.id }}
  ip:
    description: IP of the created instance.
    value: ${{ steps.create_instance.outputs.ip }}

runs:
  using: composite
  steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Install scaleway-cli
      uses: ./.github/actions/scaleway/install-cli

    - name: Clean up instances with the '${{ inputs.tag }}' tag
      shell: bash
      run: |
        instances="$(scw instance server list tags.0=${{ inputs.tag }} -o json | jq -r '.[].id')"

        for id in ${instances}; do
          volumes="$(scw block volume list product-resource-id="${id}" -o json | jq -r '.[].id')"

          echo "üïê Terminating instance ${id}..."
          scw instance server terminate "${id}" with-ip=true with-block=true

          # The new block storage API for scaleway can't detatch block storage from machines
          # and it takes a while to consolidate, so we're forced to do this
          sleep 30

          for volumeId in ${volumes}; do
            echo "üïê Deleting block volume ${volumeId} from instance ${id}..."
            scw block volume delete "${volumeId}"
          done
        done

        echo "Cleanup finished"
