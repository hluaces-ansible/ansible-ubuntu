---
name: Test
run-name: Test for ${{ github.event_name }}:${{ github.ref }} (${{ github.sha }})
"on":
  pull_request:
  schedule:
    - cron: "0 3 * * 1"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Test:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        host: ["ubuntu24-laptop", "ubuntu24-desktop"]
    steps:
      - name: Check out code
        uses: actions/checkout@v5

      ################
      # Caches
      ################
      # - name: Cache Vagrant boxes
      #   uses: actions/cache@v4
      #   with:
      #     path: ~/.vagrant.d/boxes
      #     key: vagrant-boxes

      # - name: Cache Ansible Galaxy roles
      #   uses: actions/cache@v4
      #   with:
      #     path: roles/vendors/
      #     key: ansible-galaxy-roles-${{ hashFiles('roles/requirements.yml') }}

      # - name: Cache Ansible Galaxy collections
      #   uses: actions/cache@v4
      #   with:
      #     path: collections/vendors/
      #     key: ansible-galaxy-collections-${{ hashFiles('collections/requirements.yml') }}

      ################
      # Bootstrapping
      ################
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Init variables
        run: |
          # Helps with isolation
          echo "MOLECULE_EPHEMERAL_DIRECTORY="${GITHUB_WORKSPACE}/.molecule_ephemeral/${{ matrix.host }}"" >> $GITHUB_ENV

          # Workaround for https://github.com/ansible-community/molecule-plugins/issues/301
          echo "_MOLECULE_VAGRANT_PLUGIN_DIR="$(python3 -c 'import sysconfig; print(sysconfig.get_paths()["purelib"])')/molecule_plugins/vagrant"" >> $GITHUB_ENV

      - name: Set up dependencies
        run: make dependencies

      - name: Set up Ansible homedir and show tools versions
        run: ansible --version && vagrant --version && VBoxManage --help

      - name: Set up Ansible Vault
        run: echo "$VAULT_TOKEN" > ~/.ansible/default.vault && chmod 600 ~/.ansible/default.vault
        env:
          VAULT_TOKEN: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}

      - name: Provision Vagrant box
        run: make test MOLECULE_ARGS="-s "${{ matrix.host }}""

      ################
      # Artifacts
      ################
      - name: Find logs
        run: |
          find . -iname 'vagrant.err'
          find . -iname 'ansible.log'

      - name: Clean up molecule resources
        if: always()
        run: molecule destroy -s "${{ matrix.host }}"

      - name: Upload ansible logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ansible-${{ matrix.host }}.log
          path: config/tmp/ansible.log

      - name: Upload vagrant logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vagrant-${{ matrix.host }}.log
          path: ${{ env.MOLECULE_EPHEMERAL_DIRECTORY }}/vagrant.err
