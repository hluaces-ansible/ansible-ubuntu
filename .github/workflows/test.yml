---
name: Test
run-name: Test for ${{ github.event_name }}:${{ github.ref }} (${{ github.sha }})
'on':
  pull_request:
  schedule:
    - cron: "0 3 * * 1"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  provision-runner:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        host: ["ubuntu22-laptop", "ubuntu22-desktop"]
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install scaleway-cli
        uses: ./.github/actions/scaleway/install-cli

      - name: Create runner token
        id: runner_token
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN_RUNNERS }}
        uses: ./.github/actions/runners/get_token
        with:
          repository: ${{ github.repository }}

      - name: Create cloud-init file
        shell: bash
        run: sed -i -e "s|%%TOKEN%%|${{ steps.runner_token.outputs.token }}|g" ./.github/templates/cloud-init.cfg

      - name: Provision new self-hosted runner
        env:
          SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
          SCW_ORGANIZATION: ${{ secrets.SCW_ORGANIZATION_ID }}
        uses: ./.github/actions/scaleway/create-instance
        with:
          name: ${{ matrix.host }}-${{ github.sha }}
          type: 'PRO2-S'

  Test:
    needs: provision-runner
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        host: ["ubuntu22-laptop", "ubuntu22-desktop"]
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      ################
      # Caches
      ################
      - name: Cache Vagrant boxes
        uses: actions/cache@v4
        with:
          path: ~/.vagrant.d/boxes
          key: vagrant-boxes

      - name: Cache Ansible Galaxy roles
        uses: actions/cache@v4
        with:
          path: roles/vendors/
          key: ansible-galaxy-roles-${{ hashFiles('roles/requirements.yml') }}

      - name: Cache Ansible Galaxy collections
        uses: actions/cache@v4
        with:
          path: collections/vendors/
          key: ansible-galaxy-collections-${{ hashFiles('collections/requirements.yml') }}

      ################
      # Bootstrapping
      ################
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up dependencies
        run: make dependencies

      - name: Set up Ansible homedir and show tools versions
        run: ansible --version && vagrant --version && virtualbox --help

      - name: Set up Ansible Vault
        run: echo "$VAULT_TOKEN" > ~/.ansible/default.vault && chmod 600 ~/.ansible/default.vault
        env:
          VAULT_TOKEN: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}

      - name: Provision Vagrant box
        run: molecule converge -- -l "${{ matrix.host }}" --skip-tags="role-joplin"

      ################
      # Artifacts
      ################
      - name: Clean up molecule resources
        if: always()
        run: molecule destroy --all --parallel

      - name: Upload ansible logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ansible-${{ matrix.host }}.log
          path: config/tmp/ansible.log

      - name: Upload vagrant logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: vagrant-${{ matrix.host }}.log
          path: /Users/runner/.cache/molecule/ansible-ubuntu/default/vagrant.err

  cleanup:
    needs: Test
    name: Clean up self-hosted runners
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Clean up instances
        env:
          SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
          SCW_ORGANIZATION: ${{ secrets.SCW_ORGANIZATION_ID }}
        uses: ./.github/actions/scaleway/cleanup

      - name: Clean up GitHub runners
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN_RUNNERS }}
        uses: ./.github/actions/runners/delete_offline
        with:
          repository: ${{ github.repository }}
